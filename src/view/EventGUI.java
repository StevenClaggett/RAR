/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import DataModel.*;
import RFID.RFIDCallable;
import RFID.RFIDCaller;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import javax.swing.JOptionPane;

/**
 *
 * @author Chris Reilly
 */
public class EventGUI extends javax.swing.JFrame implements RFIDCallable {
    
    private static RARDocument doc;
    private static Event event;
    private static RFIDCaller caller;

    /**
     * Creates new form EventGUI
     */
    public EventGUI(RARDocument doc_, Event e_) {
        this.doc = doc_;
        this.event = e_;
        initComponents();
        setDefaultCloseOperation(javax.swing.WindowConstants.HIDE_ON_CLOSE);
        caller = new RFIDCaller(this);
        
        //this listener is for when the window closes, it will close the port.
        this.addWindowListener(new WindowAdapter()
            {
                @Override
                public void windowClosing(WindowEvent e)
                {
                    if (caller.serialPort != null)
                    {
                        caller.serialPort.close();
                    }
                    //System.out.println(event.getAttendees().getRosterSet().get(0));
                    
                    //we also want to move the event to completed events
                    
                    doc.getFutureEvents().remove(doc.getFutureEvents().indexOf(event));
                    doc.getCompletedEvents().add(event);
                    
                }
            });
        
    }

    @Override
    public void idWasScanned(String id)
    {
        long idTemp = 0;
        try 
        {
            idTemp = Long.parseLong(id, 16);    
        } catch (NumberFormatException e) 
        {
            JOptionPane.showMessageDialog(this, "Error in parsing long from text.");
            return;
        }
        
        
        
        
        if (doc.getRoster().getRosterSet().contains(new Member(idTemp)))
        {
            if (event.getInvites().getRosterSet().contains(new Member(idTemp)))
            {
                Member m = event.getInvites().getMember(idTemp);
                if(event.MemberAttended(m))
                {
                    MemberName.setText("Welcome " + m.getfName()+" "+m.getlName());
                } else
                {
                    MemberName.setText("Error.");
                }
            }else
            {
                Member m = doc.getRoster(idTemp);
                if (event.getAttendees().getRosterSet().contains(m))
                {
                    MemberName.setText(m.getfName()+ " " +m.getlName() + " is already counted as present.");
                } else
                {
                    MemberName.setText(m.getfName()+ " " +m.getlName() + " was not invited.");
                }
            }  
        } else
        {
            MemberName.setText("The id " + idTemp + " does not exist in the system.");
        }
            
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        MemberName = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jButton1.setText("Cancel");
        jButton1.setActionCommand("CancelButton");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        MemberName.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, 1080, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(MemberName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(464, Short.MAX_VALUE)
                .addComponent(MemberName, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton1))
        );

        MemberName.getAccessibleContext().setAccessibleName("MemberName");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        this.dispatchEvent(new WindowEvent(this, WindowEvent.WINDOW_CLOSING));
    }//GEN-LAST:event_jButton1ActionPerformed
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EventGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EventGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EventGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EventGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new EventGUI(new RARDocument(), new Event("Event")).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel MemberName;
    private javax.swing.JButton jButton1;
    // End of variables declaration//GEN-END:variables
}
